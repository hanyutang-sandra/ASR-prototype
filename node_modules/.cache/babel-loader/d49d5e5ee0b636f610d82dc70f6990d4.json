{"ast":null,"code":"var _jsxFileName = \"/Users/Wangmei/Desktop/cmu/capstone/ASRproto/asr-proto/src/page/result.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withRoot from '../withRoot';\nimport { connect } from 'react-redux';\nimport { seekUri, getResult } from '../redux/actions';\nimport compose from 'recompose/compose';\nimport store from '../redux/store';\n\nconst styles = theme => ({\n  root: {\n    margin: '2rem',\n    marginTop: '3rem',\n    padding: '1rem'\n  },\n  title: {\n    color: theme.palette.primary.dark\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  speaker: {\n    color: theme.palette.primary.dark,\n    fontSize: 16,\n    fontWeight: 500\n  },\n  incorrect: {\n    display: 'inline-block',\n    backgroundColor: ''\n  },\n  resultSpan: {\n    display: 'inline-block'\n  }\n});\n\nconst mapStateToProps = state => ({\n  progress: state.changeProgress.progress\n});\n\nfunction renderClass(num, classes) {\n  if (num <= 0.6 && num !== null) {\n    return classes.incorrect;\n  } else {\n    return classes.correct;\n  }\n}\n\nclass ResultCard extends React.Component {\n  constructor(prop) {\n    super(prop);\n\n    this.handleExpandClick = () => {\n      this.setState(state => ({\n        expanded: !state.expanded\n      }));\n    };\n\n    this.resultSec = React.createRef();\n    this.state = {\n      expanded: false,\n      name: this.props.name,\n      uri: null,\n      result: null\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    if (this.props.progress === 'uploaded') {\n      console.log(this.props.name);\n      fetch('http://localhost:8000/seekresult', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.props.name\n        })\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        fetch(data.uri, {\n          method: 'GET',\n          mode: 'cors',\n          cache: 'no-cache'\n        }).then(res => {\n          return res.json();\n        }).then(data => {\n          console.log(data);\n          this.setState({\n            result: data.results,\n            expanded: true\n          });\n          store.dispatch(getResult());\n        }).catch(err => {\n          console.log(err);\n          alert('Something is wrong');\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    return React.createElement(Card, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      classes: {\n        title: classes.title\n      },\n      title: \"2. See transcripts\",\n      action: React.createElement(IconButton, {\n        disabled: false,\n        className: classnames(classes.expand, {\n          [classes.expandOpen]: this.state.expanded\n        }),\n        onClick: this.handleExpandClick,\n        \"aria-expanded\": this.state.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      in: this.state.expanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.props.progress === 'getResult' ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.speaker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Speaker 1:\"))), React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      className: classes.transcript,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      ref: this.resultSec,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.result.items.map((item, index) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      key: index,\n      className: renderClass(item.alternatives[0].confidence, classes),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, item.alternatives[0].content), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"\\xA0\")))))))) : null)));\n  }\n\n}\n\nResultCard.protoTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withRoot(compose(withStyles(styles, {\n  name: 'ResultCard'\n}), connect(mapStateToProps))(ResultCard));","map":{"version":3,"sources":["/Users/Wangmei/Desktop/cmu/capstone/ASRproto/asr-proto/src/page/result.js"],"names":["React","PropTypes","withStyles","classnames","Card","CardHeader","CardContent","Typography","ExpandMoreIcon","Collapse","IconButton","Grid","List","ListItem","ListItemText","withRoot","connect","seekUri","getResult","compose","store","styles","theme","root","margin","marginTop","padding","title","color","palette","primary","dark","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","speaker","fontSize","fontWeight","incorrect","display","backgroundColor","resultSpan","mapStateToProps","state","progress","changeProgress","renderClass","num","classes","correct","ResultCard","Component","constructor","prop","handleExpandClick","setState","expanded","resultSec","createRef","name","props","uri","result","render","console","log","fetch","method","mode","cache","headers","body","JSON","stringify","then","res","json","data","results","dispatch","catch","err","alert","transcript","items","map","item","index","alternatives","confidence","content","protoTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withRoot from '../withRoot';\n\nimport {connect} from 'react-redux';\nimport { seekUri, getResult } from '../redux/actions';\n\nimport compose from 'recompose/compose';\nimport store from '../redux/store';\n\n\nconst styles = theme => ({\n    root: {\n        margin: '2rem',\n        marginTop: '3rem',\n        padding: '1rem',\n    },\n    title: {\n        color: theme.palette.primary.dark\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)'\n    },\n    speaker: {\n        color: theme.palette.primary.dark,\n        fontSize: 16,\n        fontWeight: 500\n    },\n    incorrect: {\n        display: 'inline-block',\n        backgroundColor: ''\n    },\n    resultSpan: {\n        display: 'inline-block',\n    },\n});\n\nconst mapStateToProps = state => ({\n    progress: state.changeProgress.progress\n});\n\nfunction renderClass(num, classes) {\n    if (num <= 0.6 && num !== null) {\n        return classes.incorrect\n    }else{\n        return classes.correct\n    }\n}\n\nclass ResultCard extends React.Component{\n    constructor(prop){\n        super(prop);\n\n        this.resultSec = React.createRef();\n\n        this.state = {\n            expanded: false,\n            name: this.props.name,\n            uri: null,\n            result: null,\n        }\n    }\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n\n    render(){\n    const { classes } = this.props;\n\n    if (this.props.progress === 'uploaded') {\n        console.log(this.props.name);\n\n        fetch('http://localhost:8000/seekresult', {\n            method: 'POST',\n            mode:'cors',\n            cache: 'no-cache',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({name: this.props.name})\n        }).then(res => {\n            return res.json()\n        }).then(data => {\n            console.log(data);\n\n            fetch(data.uri, {\n                method: 'GET',\n                mode: 'cors',\n                cache: 'no-cache'\n            }).then(res => {\n                return res.json()\n            }).then(data => {\n                console.log(data);\n                this.setState({\n                        result: data.results,\n                        expanded: true,\n                    });\n                store.dispatch(getResult())\n            }).catch(err => {\n                console.log(err);\n                alert('Something is wrong')\n            })\n\n        }).catch(err => {\n            console.log(err)\n        });\n    }\n\n\n    return (\n        <Card className={ classes.root }>\n            <CardHeader classes = {{ title: classes.title,}}\n                        title={ \"2. See transcripts\" }\n                        action={\n                            <IconButton\n                                disabled={false}\n                                className={classnames(classes.expand, {\n                                [classes.expandOpen]: this.state.expanded,\n                            })}\n                                        onClick = {this.handleExpandClick}\n                                        aria-expanded = {this.state.expanded}>\n                                <ExpandMoreIcon />\n                            </IconButton>\n                        }\n            />\n\n            <Collapse in={this.state.expanded} timeout='auto' unmountOnExit>\n                <CardContent>\n                    {this.props.progress === 'getResult'?\n                        <List>\n                            <ListItem>\n                                <Grid container spacing={8}>\n                                    <Grid item xs={3}>\n                                        <ListItemText>\n                                            <Typography className={classes.speaker}>Speaker 1:</Typography>\n                                        </ListItemText>\n                                    </Grid>\n                                    <Grid item xs={9} className={classes.transcript}>\n                                        <ListItemText ref={this.resultSec}>\n                                            {this.state.result.items.map((item, index) => (\n                                                <span>\n                                                    <span key={index}\n                                                          className = {renderClass(item.alternatives[0].confidence, classes)}\n                                                          >\n                                                        {item.alternatives[0].content}\n                                                    </span>\n                                                    <span>&nbsp;</span>\n                                                </span>\n                                            ))}\n                                        </ListItemText>\n                                    </Grid>\n                                </Grid>\n                            </ListItem>\n                        </List>\n                        : null}\n                </CardContent>\n            </Collapse>\n        </Card>\n    )\n}\n\n}\n\nResultCard.protoTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(compose(\n    withStyles(styles, {name: 'ResultCard'}),\n    connect(mapStateToProps)\n)(ResultCard));"]},"metadata":{},"sourceType":"module"}