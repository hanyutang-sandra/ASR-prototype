{"ast":null,"code":"// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/*!\n * DO NOT REMOVE THE FOLLOWING NAMESPACE DEFINITIONS\n */\n\n/**\n * @namespace google\n */\n\n/**\n * @namespace google.cloud\n */\n\n/**\n * @namespace google.cloud.speech\n */\n\n/**\n * @namespace google.cloud.speech.v1\n */\n\n/**\n * @namespace google.cloud.speech.v1p1beta1\n */\n\n/**\n * @namespace google.protobuf\n */\n\n/**\n * @namespace google.rpc\n */\n\n/**\n * @namespace google.longrunning\n */\n'use strict';\n\nvar helpers = require('./helpers'); // Import the clients for each version supported by this package.\n\n\nvar gapic = Object.freeze({\n  v1: require('./v1'),\n  v1p1beta1: require('./v1p1beta1')\n}); // Augment the SpeechClient objects with the helpers.\n\nfor (var _i = 0, _Object$keys = Object.keys(gapic); _i < _Object$keys.length; _i++) {\n  var gapicVersion = _Object$keys[_i];\n  var clientProto = gapic[gapicVersion].SpeechClient.prototype;\n  Object.assign(clientProto, helpers());\n}\n/**\n * The `@google-cloud/speech` package has the following named exports:\n *\n * - `SpeechClient` - Reference to {@link v1.SpeechClient}\n * - `v1` - This is used for selecting or pinning a particular backend service\n *   version. It exports:\n *   - `SpeechClient` - Reference to {@link v1.SpeechClient}\n * - `v1p1beta1` - This is used for selecting or pinning a beta backend service\n *   version. It exports:\n *   - `SpeechClient` - Reference to {@link v1p1beta1.SpeechClient}\n *\n * @module {object} @google-cloud/speech\n * @alias nodejs-speech\n *\n * @example <caption>Install the client library with <a href=\"https://www.npmjs.com/\">npm</a>:</caption>\n * npm install --save @google-cloud/speech\n *\n * @example <caption>Import the client library:</caption>\n * const speech = require('@google-cloud/speech');\n *\n * @example <caption>Create a client that uses <a href=\"https://goo.gl/64dyYX\">Application Default Credentials (ADC)</a>:</caption>\n * const client = new speech.SpeechClient();\n *\n * @example <caption>Create a client with <a href=\"https://goo.gl/RXp6VL\">explicit credentials</a>:</caption>\n * const client = new speech.SpeechClient({\n *   projectId: 'your-project-id',\n *   keyFilename: '/path/to/keyfile.json',\n * });\n */\n\n\nmodule.exports = gapic.v1;\n/**\n * @type {object}\n * @property {constructor} SpeechClient Reference to {@link v1.SpeechClient}.\n */\n\nmodule.exports.v1 = gapic.v1;\n/**\n * @type {object}\n * @property {constructor} SpeechClient Reference to {@link v1p1beta1.SpeechClient}.\n */\n\nmodule.exports.v1p1beta1 = gapic.v1p1beta1; // Alias `module.exports` as `module.exports.default`, for future-proofing.\n\nmodule.exports.default = Object.assign({}, module.exports);","map":null,"metadata":{},"sourceType":"script"}