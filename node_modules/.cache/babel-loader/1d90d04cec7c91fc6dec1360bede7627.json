{"ast":null,"code":"export function handleTranscribe(data) {\n  const aws = require('aws-sdk');\n\n  const transcribeService = new aws.TranscribeService();\n  const uri = data.location;\n  const name = data.key;\n  let params = {\n    LanguageCode: 'es-ES',\n    Media: {\n      MediaFileUri: uri\n    },\n    MediaFormat: 'mp3' | 'mp4' | 'wav' | 'flac',\n    TranscriptionJobName: name,\n    Settings: {\n      ChannelIdentification: false,\n      ShowSpeakerLabels: true\n    }\n  };\n  transcribeService.startTranscriptionJob(params, function (err, data) {\n    if (err) console.log(err, err.stack);else console.log(data);\n  });\n}\nexport function getResult(data) {\n  const aws = require('aws-sdk');\n\n  const transcribeService = aws.TranscribeService();\n  let params = {\n    TranscriptionJobName: ''\n  };\n  transcribeService.getTranscriptionJob(params, function (err, data) {\n    if (err) console.log(err, err.stack);else console.log(data);\n  });\n}","map":{"version":3,"sources":["/Users/Wangmei/Desktop/cmu/capstone/ASRproto/asr-proto/src/onlineTranscribe.js"],"names":["handleTranscribe","data","aws","require","transcribeService","TranscribeService","uri","location","name","key","params","LanguageCode","Media","MediaFileUri","MediaFormat","TranscriptionJobName","Settings","ChannelIdentification","ShowSpeakerLabels","startTranscriptionJob","err","console","log","stack","getResult","getTranscriptionJob"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,IAA1B,EAA+B;AAClC,QAAMC,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,QAAMC,iBAAiB,GAAG,IAAIF,GAAG,CAACG,iBAAR,EAA1B;AACA,QAAMC,GAAG,GAAGL,IAAI,CAACM,QAAjB;AACA,QAAMC,IAAI,GAAGP,IAAI,CAACQ,GAAlB;AAEA,MAAIC,MAAM,GAAG;AACTC,IAAAA,YAAY,EAAE,OADL;AAETC,IAAAA,KAAK,EAAE;AACHC,MAAAA,YAAY,EAAEP;AADX,KAFE;AAKTQ,IAAAA,WAAW,EAAE,QAAQ,KAAR,GAAgB,KAAhB,GAAwB,MAL5B;AAMTC,IAAAA,oBAAoB,EAAEP,IANb;AAOTQ,IAAAA,QAAQ,EAAE;AACNC,MAAAA,qBAAqB,EAAE,KADjB;AAENC,MAAAA,iBAAiB,EAAE;AAFb;AAPD,GAAb;AAaAd,EAAAA,iBAAiB,CAACe,qBAAlB,CAAwCT,MAAxC,EAAgD,UAASU,GAAT,EAAcnB,IAAd,EAAoB;AAChE,QAAImB,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiBA,GAAG,CAACG,KAArB,EAAT,KACKF,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACR,GAHD;AAIH;AAID,OAAO,SAASuB,SAAT,CAAmBvB,IAAnB,EAAwB;AAC3B,QAAMC,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,QAAMC,iBAAiB,GAAGF,GAAG,CAACG,iBAAJ,EAA1B;AAEA,MAAIK,MAAM,GAAG;AACTK,IAAAA,oBAAoB,EAAE;AADb,GAAb;AAGAX,EAAAA,iBAAiB,CAACqB,mBAAlB,CAAsCf,MAAtC,EAA8C,UAASU,GAAT,EAAcnB,IAAd,EAAoB;AAC9D,QAAImB,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiBA,GAAG,CAACG,KAArB,EAAT,KACKF,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACR,GAHD;AAIH","sourcesContent":["export function handleTranscribe(data){\n    const aws = require('aws-sdk');\n    const transcribeService = new aws.TranscribeService();\n    const uri = data.location;\n    const name = data.key;\n\n    let params = {\n        LanguageCode: 'es-ES',\n        Media: {\n            MediaFileUri: uri\n        },\n        MediaFormat: 'mp3' | 'mp4' | 'wav' | 'flac',\n        TranscriptionJobName: name,\n        Settings: {\n            ChannelIdentification: false,\n            ShowSpeakerLabels: true,\n        }\n    };\n\n    transcribeService.startTranscriptionJob(params, function(err, data) {\n        if (err) console.log(err, err.stack);\n        else console.log(data)\n    });\n}\n\n\n\nexport function getResult(data){\n    const aws = require('aws-sdk');\n    const transcribeService = aws.TranscribeService();\n\n    let params = {\n        TranscriptionJobName: ''\n    };\n    transcribeService.getTranscriptionJob(params, function(err, data) {\n        if (err) console.log(err, err.stack);\n        else console.log(data)\n    })\n}"]},"metadata":{},"sourceType":"module"}