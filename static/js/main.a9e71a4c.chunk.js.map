{"version":3,"sources":["withRoot.js","page/appbar.js","page/upload.js","page/result.js","page/index.js","serviceWorker.js","index.js","media/logo.png"],"names":["theme","createMuiTheme","palette","primary","light","lightBlue","main","dark","secondary","grey","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","CssBaseline_default","HeadBar","classes","this","className","root","AppBar_default","headbar","Toolbar_default","variant","IconButton_default","menuButton","src","logo","alt","img","Typography_default","header","React","withStyles","flexGrow","backgroundColor","position","height","marginLeft","marginRight","width","config","bucketName","region","accessKeyId","secretAccessKey","UploadCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleExpandClick","setState","state","expanded","handleCancel","document","getElementById","value","handleSubmit","ev","preventDefault","ReactS3","uploadFile","selectedFile","then","data","console","log","catch","err","onChangeHandler","target","files","Card_default","CardHeader_default","title","action","classnames","expand","defineProperty","expandOpen","onClick","aria-expanded","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","form","onSubmit","Grid_default","container","spacing","item","xs","Input_default","id","type","onChange","submit","Button_default","cancel","submitbtn","margin","marginTop","padding","color","transform","transition","transitions","create","duration","shortest","text","&:hover","ResultCard","prop","CardContent_default","List_default","ListItem_default","ListItemText_default","speaker","_transcript","protoTypes","PropTypes","object","isRequired","fontSize","fontWeight","Page","appbar","upload","uploadcard","result","resultcard","Boolean","window","location","hostname","match","ReactDOM","render","page","require","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"oWAOMA,EAAQC,yBAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,MAAOC,IAAU,KACjBC,KAAMD,IAAU,KAChBE,KAAMF,IAAU,MAEpBG,UAAW,CACPJ,MAAOK,IAAK,KACZH,KAAMG,IAAK,KACXF,KAAME,IAAK,OAGnBC,WAAY,CACRC,iBAAiB,KAkBVC,MAbf,SAAkBC,GAUd,OATA,SAAkBC,GACd,OACIC,EAAAC,EAAAC,cAACC,EAAA,iBAAD,CAAkBlB,MAAQA,GACtBe,EAAAC,EAAAC,cAACE,EAAAH,EAAD,MACAD,EAAAC,EAAAC,cAACJ,EAAcC,MCEzBM,mLAEO,IACGC,EAAYC,KAAKR,MAAjBO,QAER,OACIN,EAAAC,EAAAC,cAAA,OAAKM,UAAYF,EAAQG,MACrBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAQO,UAAYF,EAAQK,SACxBX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAASY,QAAQ,SACbb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAYO,UAAYF,EAAQS,YAC5Bf,EAAAC,EAAAC,cAAA,OAAKc,IAAMC,IAAOC,IAAM,OAASV,UAAYF,EAAQa,OAEzDnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAYO,UAAYF,EAAQe,QAAhC,yCAZFC,IAAMxB,WA0BbD,IAAS0B,qBAjDT,SAAAtC,GAAK,MAAK,CACrBwB,KAAM,CACFe,SAAU,GAEdb,QAAS,CACLc,gBAAiBxC,EAAME,QAAQC,QAAQC,MACvCqC,SAAU,QACVC,OAAQ,IAEZZ,WAAY,CACRa,YAAa,GACbC,YAAa,IAEjBV,IAAK,CACDW,MAAO,GACPH,OAAQ,IAEZN,OAAQ,CACJR,QAAS,QA+BOU,CAAmBlB,oKCGrC0B,EAAS,CACXC,WAAY,WACZC,OAAQ,YACRC,YAAa,uBACbC,gBAAiB,4CAIfC,cACF,SAAAA,EAAYrC,GAAO,IAAAsC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA6B,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnC,KAAMR,KASV4C,kBAAoB,WAChBN,EAAKO,SAAS,SAAAC,GAAK,MAAK,CAAEC,UAAWD,EAAMC,aAX5BT,EAenBU,aAAe,WACXC,SAASC,eAAe,QAAQC,MAAQ,IAhBzBb,EAmBnBc,aAAe,SAACC,GACZA,EAAGC,iBACHC,IAAQC,WAAWlB,EAAKQ,MAAMW,aAAczB,GACvC0B,KAAM,SAACC,GACJC,QAAQC,IAAIF,KAEfG,MAAO,SAACC,GACLH,QAAQC,IAAIE,MA1BLzB,EA8BnB0B,gBAAkB,SAAAX,GACdf,EAAKO,SAAS,CAACY,aAAcJ,EAAGY,OAAOC,MAAM,MA5B7C5B,EAAKQ,MAAQ,CACTC,UAAU,EACVU,aAAc,MALHnB,wEAkCV,IACG/B,EAAYC,KAAKR,MAAjBO,QAER,OACIN,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAMO,UAAYF,EAAQG,MACtBT,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CAAYK,QAAW,CAAE8D,MAAO9D,EAAQ8D,OACpCA,MAAQ,wBACRC,OACIrE,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAYO,UAAW8D,IAAWhE,EAAQiE,OAATjC,OAAAkC,EAAA,EAAAlC,CAAA,GAC5BhC,EAAQmE,WAAalE,KAAKsC,MAAMC,WAErC4B,QAAWnE,KAAKoC,kBAChBgC,gBAAiBpE,KAAKsC,MAAMC,UACxB9C,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,SAKZD,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAU6E,GAAIvE,KAAKsC,MAAMC,SAAUiC,QAAQ,OAAOC,eAAa,GAC3DhF,EAAAC,EAAAC,cAAA,QAAMM,UAAYF,EAAQ2E,KAAOC,SAAU3E,KAAK4C,cAC5CnD,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAMmF,WAAS,EAACC,QAAS,GACrBrF,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAMqF,MAAI,EAACC,GAAI,IACXvF,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAOwF,GAAG,OAAOC,KAAK,OAAO7E,QAAQ,WAAW8E,SAAUpF,KAAKwD,iBAA/D,YAGR/D,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAMmF,WAAS,EAACC,QAAS,EAAG7E,UAAYF,EAAQsF,QAC5C5F,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAMqF,MAAI,EAACC,GAAI,GACXvF,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CAAQY,QAAQ,WAAWL,UAAYF,EAAQwF,OAASpB,QAASnE,KAAKwC,cAAtE,WAEJ/C,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAMqF,MAAI,EAACC,GAAI,GACXvF,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CAAQyF,KAAK,SAAS7E,QAAQ,YAAYL,UAAYF,EAAQyF,WAA9D,sBAjEPzE,IAAMxB,WAgFhBD,KAAS0B,qBAtIT,SAAAtC,GAAK,MAAK,CACrBwB,KAAM,CACFuF,OAAQ,OACRC,UAAW,OACXC,QAAS,QAEb9B,MAAO,CACH+B,MAAOlH,EAAME,QAAQC,QAAQI,MAEjC+E,OAAQ,CACJ6B,UAAW,eACXxE,WAAY,OACZyE,WAAYpH,EAAMqH,YAAYC,OAAO,YAAa,CAC9CC,SAAUvH,EAAMqH,YAAYE,SAASC,YAG7ChC,WAAY,CACR2B,UAAW,kBAEfnB,KAAM,CACFrD,WAAY,OACZE,MAAO,OAEX4E,KAAK,CACD5E,MAAO,MACPF,WAAY,SAGhBgE,OAAO,CACHK,UAAW,QAEfH,OAAO,CACHhE,MAAO,SAEXiE,UAAW,CACPjE,MAAO,QACPL,gBAAiBxC,EAAME,QAAQC,QAAQG,KAEvCoH,UAAW,CACPlF,gBAAiBxC,EAAME,QAAQC,QAAQI,SA+F3B+B,CAAmBa,0GC1GrCwE,eACF,SAAAA,EAAYC,GAAK,IAAAxE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAqG,IACbvE,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAsE,GAAAlE,KAAAnC,KAAMsG,KAOVlE,kBAAoB,WAChBN,EAAKO,SAAS,SAAAC,GAAK,MAAK,CAAEC,UAAWD,EAAMC,aAN3CT,EAAKQ,MAAQ,CACTC,UAAU,GAJDT,wEAaL,IACA/B,EAAYC,KAAKR,MAAjBO,QAER,OACIN,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAMO,UAAYF,EAAQG,MACtBT,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CAAYK,QAAW,CAAE8D,MAAO9D,EAAQ8D,OAC5BA,MAAQ,qBACRC,OACIrE,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAYO,UAAW8D,IAAWhE,EAAQiE,OAATjC,OAAAkC,EAAA,EAAAlC,CAAA,GAC5BhC,EAAQmE,WAAalE,KAAKsC,MAAMC,WAEzB4B,QAAWnE,KAAKoC,kBAChBgC,gBAAiBpE,KAAKsC,MAAMC,UACpC9C,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,SAKpBD,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAU6E,GAAIvE,KAAKsC,MAAMC,SAAUiC,QAAQ,OAAOC,eAAa,GAC3DhF,EAAAC,EAAAC,cAAC4G,GAAA7G,EAAD,KACID,EAAAC,EAAAC,cAAC6G,GAAA9G,EAAD,KACID,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,KACID,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAMmF,WAAS,EAACC,QAAS,GACrBrF,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAMqF,MAAI,EAACC,GAAI,GACXvF,EAAAC,EAAAC,cAAC+G,GAAAhH,EAAD,KACID,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAYO,UAAYF,EAAQ4G,SAAhC,SAGRlH,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CAAMqF,MAAI,EAACC,GAAI,EAAG/E,UAAYF,EAAQ6G,aAClCnH,EAAAC,EAAAC,cAAC+G,GAAAhH,EAAD,6BA3CfqB,IAAMxB,WAwD/B8G,GAAWQ,WAAa,CACpB9G,QAAS+G,KAAUC,OAAOC,YAGf1H,SAAS0B,qBAtFT,SAAAtC,GAAK,MAAK,CACrBwB,KAAM,CACFuF,OAAQ,OACRC,UAAW,OACXC,QAAS,QAEb9B,MAAO,CACH+B,MAAOlH,EAAME,QAAQC,QAAQI,MAEjC+E,OAAQ,CACJ6B,UAAW,eACXxE,WAAY,OACZyE,WAAYpH,EAAMqH,YAAYC,OAAO,YAAa,CAC9CC,SAAUvH,EAAMqH,YAAYE,SAASC,YAG7ChC,WAAY,CACR2B,UAAW,kBAEfc,QAAS,CACLf,MAAOlH,EAAME,QAAQC,QAAQI,KAC7BgI,SAAU,GACVC,WAAY,OAgEIlG,CAAmBqF,KChFrCc,oLAEQ,IACEpH,EAAYC,KAAKR,MAAjBO,QAER,OACIN,EAAAC,EAAAC,cAAA,OAAKM,UAAYF,EAAQG,MACrBT,EAAAC,EAAAC,cAACyH,EAAD,MACA3H,EAAAC,EAAAC,cAAC0H,GAAD,CAAYpH,UAAYF,EAAQuH,aAChC7H,EAAAC,EAAAC,cAAC4H,GAAD,CAAYtH,UAAYF,EAAQyH,qBAT7BzG,IAAMxB,WAmBVD,KAAS0B,qBAnCT,SAAAtC,GAAK,MAAK,CACrBwB,KAAK,CACDe,SAAU,EACVC,gBAAiBxC,EAAME,QAAQM,UAAUJ,MACzCsC,OAAQ,QACRG,MAAO,SAEX+F,WAAY,CACR5B,UAAW,QAEf8B,WAAY,CACR9B,UAAW,UAwBK1E,CAAmBmG,KC/BvBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOtI,EAAAC,EAAAC,cAACqI,GAAD,MAAUvF,SAASC,eAAe,SAElDuF,EAAQ,KAAUzG,SD0HZ,kBAAmB0G,WACrBA,UAAUC,cAAcC,MAAMlF,KAAK,SAAAmF,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.a9e71a4c.chunk.js","sourcesContent":["import React from 'react';\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport grey from '@material-ui/core/colors/grey';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: lightBlue[100],\n            main: lightBlue[300],\n            dark: lightBlue[600]\n        },\n        secondary: {\n            light: grey[100],\n            main: grey[300],\n            dark: grey[500]\n        }\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\n\nfunction withRoot(Component) {\n    function WithRoot(props){\n        return (\n            <MuiThemeProvider theme={ theme }>\n                <CssBaseline />\n                <Component {...props} />\n            </MuiThemeProvider>\n        )\n    }\n\n    return WithRoot\n}\n\nexport default withRoot;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport logo from '../media/logo.png';\nimport withRoot from '../withRoot';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    headbar: {\n        backgroundColor: theme.palette.primary.light,\n        position: 'fixed',\n        height: 50\n    },\n    menuButton: {\n        marginLeft: -18,\n        marginRight: 10,\n    },\n    img: {\n        width: 60,\n        height: 30\n    },\n    header: {\n        variant: 'h6'\n    }\n});\n\n\nclass HeadBar extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={ classes.root }>\n                <AppBar className={ classes.headbar }>\n                    <Toolbar variant=\"dense\">\n                        <IconButton className={ classes.menuButton }>\n                            <img src={ logo } alt={ 'logo' } className={ classes.img }/>\n                        </IconButton>\n                        <Typography className={ classes.header }>\n                            ASR (Assessment Assistance)\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        )\n    }\n}\n\nHeadBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(HeadBar));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input'\nimport Button from '@material-ui/core/Button';\nimport withRoot from '../withRoot';\nimport ReactS3 from 'react-s3';\n\n\nconst styles = theme => ({\n    root: {\n        margin: '2rem',\n        marginTop: '5rem',\n        padding: '1rem',\n    },\n    title: {\n        color: theme.palette.primary.dark\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        })\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)'\n    },\n    form: {\n        marginLeft: '2rem',\n        width: '50%'\n    },\n    text:{\n        width: '80%',\n        marginLeft: '-2rem',\n\n    },\n    submit:{\n        marginTop: '2rem',\n    },\n    cancel:{\n        width: '10rem',\n    },\n    submitbtn: {\n        width: '10rem',\n        backgroundColor: theme.palette.primary.main,\n\n        '&:hover': {\n            backgroundColor: theme.palette.primary.dark\n        }\n\n    }\n\n});\n\nconst config = {\n    bucketName: 'asrproto',\n    region: 'us-east-2',\n    accessKeyId: 'AKIA22OMBQ5MWZDJ6BJQ',\n    secretAccessKey: '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',\n};\n\n\nclass UploadCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expanded: true,\n            selectedFile: null,\n        };\n    }\n\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }))\n    };\n\n\n    handleCancel = () => {\n        document.getElementById('file').value = \"\"\n    };\n\n    handleSubmit = (ev) => {\n        ev.preventDefault();\n        ReactS3.uploadFile(this.state.selectedFile, config)\n            .then( (data) => {\n                console.log(data);\n            })\n            .catch( (err) => {\n                console.log(err);\n            })\n    };\n\n    onChangeHandler = ev => {\n        this.setState({selectedFile: ev.target.files[0]})\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Card className={ classes.root }>\n                <CardHeader classes = {{ title: classes.title,}}\n                    title={ \"1. Upload audio files\" }\n                    action={\n                        <IconButton className={classnames(classes.expand, {\n                            [classes.expandOpen]: this.state.expanded,\n                        })}\n                        onClick = {this.handleExpandClick}\n                        aria-expanded = {this.state.expanded}>\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n\n                <Collapse in={this.state.expanded} timeout='auto' unmountOnExit>\n                    <form className={ classes.form } onSubmit={this.handleSubmit} >\n                        <Grid container spacing={0}>\n                            <Grid item xs={12}>\n                                <Input id='file' type='file' variant='outlined' onChange={this.onChangeHandler}>Browse</Input>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={0} className={ classes.submit} >\n                            <Grid item xs={6}>\n                                <Button variant='outlined' className={ classes.cancel } onClick={this.handleCancel}>Cancel</Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button type='submit' variant='contained' className={ classes.submitbtn }>Submit</Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Collapse>\n\n            </Card>\n        )\n    }\n}\n\nUploadCard.propTypes = {\n   classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(UploadCard));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withRoot from '../withRoot';\n\n\nconst styles = theme => ({\n    root: {\n        margin: '2rem',\n        marginTop: '3rem',\n        padding: '1rem',\n    },\n    title: {\n        color: theme.palette.primary.dark\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        })\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)'\n    },\n    speaker: {\n        color: theme.palette.primary.dark,\n        fontSize: 16,\n        fontWeight: 500\n    }\n});\n\nclass ResultCard extends React.Component{\n    constructor(prop){\n        super(prop);\n\n        this.state = {\n            expanded: false\n        }\n    }\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }))\n    };\n\n\n        render(){\n        const { classes } = this.props;\n\n        return (\n            <Card className={ classes.root }>\n                <CardHeader classes = {{ title: classes.title,}}\n                            title={ \"2. See transcripts\" }\n                            action={\n                                <IconButton className={classnames(classes.expand, {\n                                    [classes.expandOpen]: this.state.expanded,\n                                })}\n                                            onClick = {this.handleExpandClick}\n                                            aria-expanded = {this.state.expanded}>\n                                    <ExpandMoreIcon />\n                                </IconButton>\n                            }\n                />\n\n                <Collapse in={this.state.expanded} timeout='auto' unmountOnExit>\n                    <CardContent>\n                        <List>\n                            <ListItem>\n                                <Grid container spacing={8}>\n                                    <Grid item xs={3}>\n                                        <ListItemText>\n                                            <Typography className={ classes.speaker }>123</Typography>\n                                        </ListItemText>\n                                    </Grid>\n                                    <Grid item xs={9} className={ classes._transcript }>\n                                        <ListItemText>123321</ListItemText>\n                                    </Grid>\n                                </Grid>\n                                </ListItem>\n                        </List>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        )\n    }\n\n}\n\nResultCard.protoTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(ResultCard))","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport HeadBar from './appbar';\nimport UploadCard from './upload';\nimport ResultCard from './result';\nimport withRoot from '../withRoot';\n\nconst styles = theme => ({\n    root:{\n        flexGrow: 1,\n        backgroundColor: theme.palette.secondary.light,\n        height: '100vh',\n        width: '100vw',\n    },\n    uploadcard: {\n        marginTop: '2rem',\n    },\n    resultcard: {\n        marginTop: '2rem',\n    }\n});\n\n\nclass Page extends React.Component {\n\n    render () {\n        const { classes } = this.props;\n\n        return (\n            <div className={ classes.root }>\n                <HeadBar/>\n                <UploadCard className={ classes.uploadcard }/>\n                <ResultCard className={ classes.resultcard}/>\n            </div>\n        )\n    }\n}\n\nPage.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRoot(withStyles(styles)(Page));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Page from './page/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Page />, document.getElementById('root'));\n\nrequire('dotenv').config();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.67310b77.png\";"],"sourceRoot":""}